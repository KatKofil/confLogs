#  /etc/rsyslog.conf	Configuration file for rsyslog.
#
#			For more information see
#			/usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf


#################
#### MODULES ####
#################

module(load="imuxsock") # provides support for local system logging
#module(load="immark")  # provides --MARK-- message capability

# provides UDP syslog reception
#module(load="imudp")
#input(type="imudp" port="514")

# provides TCP syslog reception
#module(load="imtcp")
#input(type="imtcp" port="514")

# provides kernel logging support and enable non-kernel klog messages
module(load="imklog" permitnonkernelfacility="on")

###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Filter duplicated messages
$RepeatedMsgReduction on

#
# Set the default permissions for all log files.
#
$FileOwner syslog
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
$PrivDropToUser syslog
$PrivDropToGroup syslog

#
# Where to place spool and state files
#
$WorkDirectory /var/spool/rsyslog

#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf

###RULES###

# Template: "YYYY-MM-DD","hh:mm","hostname","msg"
template(name="Formater" type="list") {
	 constant(value="\"")
	 property(name="$now")
	 constant(value="\"")
	 constant(value=",")
	 constant(value="\"")
	 property(name="$hour")
	 constant(value=":")
	 property(name="$minute")
	 constant(value="\"")
	 constant(value=",")
	 constant(value="\"")
	 property(name="hostname")
	 constant(value="\"")
	 constant(value=",")
	 constant(value="\"")
	 property(name="msg")
	 constant(value="\"")
	 constant(value="\n")
	}


# Filter/parse msg of tinyproxy and place them in the tinylog.log file
if ($msg contains "Established connection to host") then {
	action(type="omfile" file="/var/log/statENAD/tinylog.log" template="Formater")
}


# Filter/parse msg of session and place them in the session.log file
if ($msg contains "C-enad") then {
	action(type="omfile" file="/var/log/statENAD/session.log" template="Formater")
}
if ($msg contains "D-enad") then {
	action(type="omfile" file="/var/log/statENAD/session.log" template="Formater")
}

# Parse msg of samba and place them in the scanner.log file (all logs)
if ($programname contains "smbd") then {
	action(type="omfile" file="/var/log/statENAD/scanner.log" template="Formater")
}

# Filter/parse msg of cups and place them in the impression.log file (not tested)
if ($programname contains "cups") then {
	if re_match($msg, "total [0-9]") then {
		action(type="omfile" file="/var/log/statENAD/impression.log" template="Formater")
	}
}
